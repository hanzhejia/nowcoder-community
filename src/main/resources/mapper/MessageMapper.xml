<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jiahz.community.mapper.MessageMapper">

    <sql id="selectFields">
        id, from_id, to_id, conversation_id, content, status, create_time
    </sql>

    <sql id="insertFields">
        from_id, to_id, conversation_id, content, status, create_time
    </sql>

    <insert id="insertMessage" parameterType="Message" keyProperty="id">
        insert into
        message (<include refid="insertFields"></include>)
        values (#{fromId}, #{toId}, #{conversationId}, #{content}, #{status}, #{createTime})
    </insert>

    <update id="updateStatus">
        update message
        set status = #{status}
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <select id="selectConversationList" resultType="com.jiahz.community.entity.Message">
        select
        <include refid="selectFields"></include>
        from message
        where id in
        (
        select max(id)
        from message
        where status != 2
        and from_id != 1
        and (from_id = #{userId} or to_id = #{userId})
        group by conversation_id
        )
        order by create_time desc
        limit #{offset}, #{limit}
    </select>

    <select id="selectConversationCount" resultType="java.lang.Integer">
        select count(m.maxid)
        from (select max(id) as maxid
              from message
              where status != 2
                and from_id != 1
                and (from_id = #{userId} or to_id = #{userId})
              group by conversation_id) as m
    </select>

    <select id="selectMessageList" resultType="com.jiahz.community.entity.Message">
        select
        <include refid="selectFields"></include>
        from message
        where from_id != 1
        and status != 2
        and conversation_id = #{conversationId}
        order by create_time desc
        limit #{offset}, #{limit}
    </select>

    <select id="selectMessageCount" resultType="java.lang.Integer">
        select count(id)
        from message
        where from_id != 1
          and status != 2
          and conversation_id = #{conversationId}
    </select>

    <select id="selectMessageUnreadCount" resultType="java.lang.Integer">
        select count(id)
        from message
        where from_id != 1
        and status = 0
        and to_id = #{userId}
        <if test="conversationId!=null">
            and conversation_id = #{conversationId}
        </if>
    </select>
</mapper>